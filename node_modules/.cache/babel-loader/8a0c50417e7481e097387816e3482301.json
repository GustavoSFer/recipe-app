{"ast":null,"code":"import React from'react';function RenderFilterBtn(props){var attribute=props.attribute,handleClick=props.handleClick,disabled=props.disabled;var type=attribute.toLowerCase();if(attribute==='Drinks'){type=attribute.substring(0,attribute.length-1).toLowerCase();}return/*#__PURE__*/React.createElement(\"div\",{className:\"px-1 col\"},/*#__PURE__*/React.createElement(\"button\",{type:\"button\",\"data-testid\":\"filter-by-\".concat(type,\"-btn\"),className:\"\".concat(disabled?'btn-secondary':'btn-primary',\"\\n        btn opacity-100 btn-all-width\"),onClick:function onClick(){return handleClick(attribute);},disabled:disabled},attribute));}RenderFilterBtn.defaultProps={disabled:false};export default RenderFilterBtn;","map":{"version":3,"sources":["/home/gustavo/github/recipe-app/src/Components/RenderFilterBtn.jsx"],"names":["React","RenderFilterBtn","props","attribute","handleClick","disabled","type","toLowerCase","substring","length","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,IACtBC,CAAAA,SADsB,CACeD,KADf,CACtBC,SADsB,CACXC,WADW,CACeF,KADf,CACXE,WADW,CACEC,QADF,CACeH,KADf,CACEG,QADF,CAE9B,GAAIC,CAAAA,IAAI,CAAGH,SAAS,CAACI,WAAV,EAAX,CACA,GAAIJ,SAAS,GAAK,QAAlB,CAA4B,CAC1BG,IAAI,CAAGH,SAAS,CAACK,SAAV,CAAoB,CAApB,CAAuBL,SAAS,CAACM,MAAV,CAAmB,CAA1C,EAA6CF,WAA7C,EAAP,CACD,CACD,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,8BACE,IAAI,CAAC,QADP,CAEE,kCAA2BD,IAA3B,QAFF,CAGE,SAAS,WAAMD,QAAQ,CAAG,eAAH,CAAqB,aAAnC,2CAHX,CAKE,OAAO,CAAG,yBAAMD,CAAAA,WAAW,CAACD,SAAD,CAAjB,EALZ,CAME,QAAQ,CAAGE,QANb,EAQGF,SARH,CADF,CADF,CAcD,CAQDF,eAAe,CAACS,YAAhB,CAA+B,CAC7BL,QAAQ,CAAE,KADmB,CAA/B,CAIA,cAAeJ,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction RenderFilterBtn(props) {\n  const { attribute, handleClick, disabled } = props;\n  let type = attribute.toLowerCase();\n  if (attribute === 'Drinks') {\n    type = attribute.substring(0, attribute.length - 1).toLowerCase();\n  }\n  return (\n    <div className=\"px-1 col\">\n      <button\n        type=\"button\"\n        data-testid={ `filter-by-${type}-btn` }\n        className={ `${disabled ? 'btn-secondary' : 'btn-primary'}\n        btn opacity-100 btn-all-width` }\n        onClick={ () => handleClick(attribute) }\n        disabled={ disabled }\n      >\n        {attribute}\n      </button>\n    </div>\n  );\n}\n\nRenderFilterBtn.propTypes = {\n  attribute: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nRenderFilterBtn.defaultProps = {\n  disabled: false,\n};\n\nexport default RenderFilterBtn;\n"]},"metadata":{},"sourceType":"module"}